# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\NextGen.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import json

import requests
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt


def uri_builder(uri):
    base_uri = "http://tower.local:8080/"
    return base_uri + uri


def formatMovieGetResponse(response):
    json_struct = json.loads(response)
    out_str = "++++++++++++++++++++++++++++++++++++++++++++++++++++++" + "\n"
    out_str += "1" + "\n"
    out_str += json_struct['displayDuration'] + "\n"
    out_str += formatMembers(json_struct['collections']) + "\n"
    out_str += "UnusedURL" + "\n"
    out_str += json_struct['displayName'] + "\n"
    out_str += formatMembers(json_struct['directors']) + "\n"
    out_str += formatMembers(json_struct['countries']) + "\n"
    out_str += formatMembers(json_struct['actors']) + "\n"
    out_str += "\n"
    out_str += json_struct['description'] + "\n"
    out_str += "++++++++++++++++++++++++++++++++++++++++++++++++++++++" + "\n"
    return out_str


def printMoveGetResponse(response):
    print(formatMovieGetResponse(response))


def formatMembers(the_list):
    print_me = ""
    for item in the_list:
        if len(print_me):
            print_me += ";"
        print_me += item["name"]
    return print_me


def print_result(status_code, good_description):
    if status_code == 200:
        print(good_description)
    else:
        print("There was a problem.")


class Ui_MainWindow(object):

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(488, 457)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(1, 1, 801, 471))
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.plainTextEdit = QtWidgets.QPlainTextEdit(self.tab)
        self.plainTextEdit.setGeometry(QtCore.QRect(0, 20, 477, 237))
        self.plainTextEdit.setObjectName("plainTextEdit")
        self.dateEdit = QtWidgets.QDateEdit(self.tab)
        self.dateEdit.setGeometry(QtCore.QRect(1, 260, 110, 22))
        self.dateEdit.setObjectName("dateEdit")
        self.checkBox = QtWidgets.QCheckBox(self.tab)
        self.checkBox.setGeometry(QtCore.QRect(402, 264, 70, 17))
        self.checkBox.setObjectName("checkBox")
        self.pushButton = QtWidgets.QPushButton(self.tab)
        self.pushButton.setGeometry(QtCore.QRect(399, 291, 75, 23))
        self.pushButton.setObjectName("pushButton")
        self.label = QtWidgets.QLabel(self.tab)
        self.label.setGeometry(QtCore.QRect(2, 0, 61, 16))
        self.label.setObjectName("label")
        self.groupBox = QtWidgets.QGroupBox(self.tab)
        self.groupBox.setObjectName(u"groupBox")
        self.groupBox.setGeometry(QtCore.QRect(177, 330, 120, 80))
        self.textEdit = QtWidgets.QTextEdit(self.groupBox)
        self.textEdit.setObjectName(u"textEdit")
        self.textEdit.setGeometry(QtCore.QRect(11, 21, 104, 20))
        self.pushButton_4 = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_4.setObjectName(u"pushButton_4")
        self.pushButton_4.setGeometry(QtCore.QRect(23, 48, 75, 23))
        self.tabWidget.addTab(self.tab, "")
        # tab 2
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.tabWidget.addTab(self.tab_2, "")
        self.plainTextEdit_2 = QtWidgets.QPlainTextEdit(self.tab_2)
        self.plainTextEdit_2.setGeometry(QtCore.QRect(2, 19, 464, 26))
        self.plainTextEdit_2.setObjectName("plainTextEdit_2")
        self.label_2 = QtWidgets.QLabel(self.tab_2)
        self.label_2.setGeometry(QtCore.QRect(3, 3, 67, 16))
        self.label_2.setObjectName("label_2")
        self.plainTextEdit_3 = QtWidgets.QPlainTextEdit(self.tab_2)
        self.plainTextEdit_3.setGeometry(QtCore.QRect(3, 71, 467, 101))
        self.plainTextEdit_3.setObjectName("plainTextEdit_3")
        self.label_3 = QtWidgets.QLabel(self.tab_2)
        self.label_3.setGeometry(QtCore.QRect(5, 55, 93, 16))
        self.label_3.setObjectName("label_3")
        self.pushButton_2 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_2.setGeometry(QtCore.QRect(2, 180, 115, 23))
        self.pushButton_2.setObjectName("pushButton_2")
        self.tabWidget.addTab(self.tab_2, "")
        # tab 3
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName(u"tab_3")
        self.plainTextEdit_4 = QtWidgets.QPlainTextEdit(self.tab_3)
        self.plainTextEdit_4.setObjectName(u"plainTextEdit_4")
        self.plainTextEdit_4.setGeometry(QtCore.QRect(2, 17, 376, 26))
        self.label_4 = QtWidgets.QLabel(self.tab_3)
        self.label_4.setObjectName(u"label_4")
        self.label_4.setGeometry(QtCore.QRect(5, 0, 88, 16))
        self.pushButton_3 = QtWidgets.QPushButton(self.tab_3)
        self.pushButton_3.setObjectName(u"pushButton_3")
        self.pushButton_3.setGeometry(QtCore.QRect(2, 47, 75, 23))
        self.tabWidget.addTab(self.tab_3, "")


        # ########################################################
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.pushButton.clicked.connect(self.addMovieButtonClicked)
        self.dateEdit.setDate(QtCore.QDate.currentDate())

        self.pushButton_2.clicked.connect(self.tab2ButtonClicked)

        self.pushButton_3.clicked.connect(self.tab3ButtonClicked)

        self.pushButton_4.clicked.connect(self.getMovieButtonClicked)

    def retranslateUi(self, MainWindow):

        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Movie Maint"))
        self.dateEdit.setDisplayFormat(_translate("MainWindow", "yyyy-MM-dd"))
        self.checkBox.setText(_translate("MainWindow", "Absolute"))
        self.checkBox.setToolTip("Check to remove all joined data and replace with Movie Text supplied. Required "
                                 "if you want duration and description overwitten.")
        self.pushButton.setText(_translate("MainWindow", "Add Movie"))
        self.label.setText(_translate("MainWindow", "Movie Text"))
        self.groupBox.setTitle(_translate("MainWindow", u"GroupBox", None))
        self.pushButton_4.setText(_translate("MainWindow", u"GetMovie", None))
        self.label_2.setText(_translate("MainWindow", "Series Name"))
        self.label_3.setText(_translate("MainWindow", "Movies in Series"))
        self.pushButton_2.setText(_translate("MainWindow", "Add Series to Existing"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", u"AddSeries"))
        self.label_4.setText(_translate("MainWindow", u"Movie Title (Year)"))
        self.pushButton_3.setText(_translate("MainWindow", u"Publish"))

        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Add Movie"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Add Series to Existing"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", u"WatchedToday"))

    def addMovieButtonClicked(self):
        put_uri = uri_builder("rest/createamoviefromtext")
        date_str = self.dateEdit.date().toString(Qt.ISODate)
        absolute_checked = self.checkBox.isChecked()
        if absolute_checked == True:
            date_str = "NONE"

        movie_info = {
            "info": self.plainTextEdit.toPlainText(),
            "viewDate": date_str,
            "absolute": absolute_checked
        }
        a = 42
        response = requests.put(put_uri, json=movie_info)
        self.updateStatusBar(response, "Movie created.")

    def tab2ButtonClicked(self):
        put_uri = uri_builder("rest/updatecollectionsonexisting")
        collections_info = {
            "titles": self.plainTextEdit_3.toPlainText(),
            "collection": self.plainTextEdit_2.toPlainText()
        }
        a = 42
        response = requests.put(put_uri, json=collections_info)
        self.updateStatusBar(response, "Collection added to existing movies.")

    def tab3ButtonClicked(self):
        put_uri = uri_builder("rest/viewedtoday")
        collections_info = {
            "titles": self.plainTextEdit_4.toPlainText(),
            "collection": "Not Used in service"
        }
        a = 42
        response = requests.put(put_uri, json=collections_info)
        self.updateStatusBar(response)

    def getMovieButtonClicked(self):
        self.plainTextEdit.setPlainText("")
        uri = uri_builder("rest/movies/")
        movie_id = self.textEdit.toPlainText()
        uri += self.textEdit.toPlainText()
        a = 42
        response = requests.get(uri)
        if response.status_code == 200:
            self.plainTextEdit.setPlainText(formatMovieGetResponse(response.content))
        self.updateStatusBar(response, "Details loaded")

    def updateStatusBar(self, response, message=None):
        if response.status_code - 200 < 100:
            if message:
                self.statusbar.showMessage(message)
            else:
                self.statusbar.showMessage("Success")
        else:
            self.statusbar.showMessage(response.content.decode('utf-8'))


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
